{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _extraReducers;\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar initialState = {\n  accesstoken: null,\n  loading: false\n};\nexport var signinUser = createAsyncThunk(\"signinUser\", function _callee() {\n  var result;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Google.logInAsync({\n            androidClientId: \"520350559970-q9dokdd76hcqmh6rb3ph1brhd2bj28ro.apps.googleusercontent.com\",\n            behavior: 'web',\n            scopes: ['profile', 'email']\n          }));\n\n        case 3:\n          result = _context.sent;\n          console.log(\"return\", result.accessToken);\n\n          if (!(result.type === 'success')) {\n            _context.next = 10;\n            break;\n          }\n\n          return _context.abrupt(\"return\", result.accessToken);\n\n        case 10:\n          return _context.abrupt(\"return\", {\n            cancelled: true\n          });\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](0);\n          return _context.abrupt(\"return\", {\n            error: true\n          });\n\n        case 16:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 13]], Promise);\n});\nvar authReducer = createSlice({\n  name: 'user',\n  initialState: initialState,\n  reducers: {},\n  extraReducers: (_extraReducers = {}, _defineProperty(_extraReducers, signinUser.fulfilled, function (state, _ref) {\n    var _ref$payload = _ref.payload,\n        accessToken = _ref$payload.accessToken,\n        user = _ref$payload.user,\n        error = _ref$payload.error;\n    console.log(state);\n\n    if (error) {\n      state.error = error;\n      alert(error);\n    } else {\n      state.userData = user;\n      state.accesstoken = accessToken;\n      AsyncStorage.setItem(\"token\", accessToken);\n      console.log(\"access\", accessToken);\n    }\n\n    console.log(state);\n  }), _defineProperty(_extraReducers, signinUser.pending, function (state, action) {\n    state.loading = true;\n  }), _extraReducers)\n});\nexport default authReducer.reducer;","map":{"version":3,"sources":["C:/Users/ABC/Clump/coder/src/Components/Reducer/LoginReducer.js"],"names":["createSlice","createAsyncThunk","AsyncStorage","initialState","accesstoken","loading","signinUser","Google","logInAsync","androidClientId","behavior","scopes","result","console","log","accessToken","type","cancelled","error","authReducer","name","reducers","extraReducers","fulfilled","state","payload","user","alert","userData","setItem","pending","action","reducer"],"mappings":";;;;;AAAA,SAAQA,WAAR,EAAoBC,gBAApB,QAA2C,kBAA3C;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,IAAMC,YAAY,GAAC;AACfC,EAAAA,WAAW,EAAC,IADG;AAEfC,EAAAA,OAAO,EAAE;AAFM,CAAnB;AAIA,OAAO,IAAMC,UAAU,GAAGL,gBAAgB,CACtC,YADsC,EAErC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAE0BM,MAAM,CAACC,UAAP,CAAkB;AACrCC,YAAAA,eAAe,EAAE,0EADoB;AAErCC,YAAAA,QAAQ,EAAE,KAF2B;AAGrCC,YAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,OAAZ;AAH6B,WAAlB,CAF1B;;AAAA;AAEWC,UAAAA,MAFX;AAQKC,UAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBF,MAAM,CAACG,WAA5B;;AARL,gBAUSH,MAAM,CAACI,IAAP,KAAgB,SAVzB;AAAA;AAAA;AAAA;;AAAA,2CAWcJ,MAAM,CAACG,WAXrB;;AAAA;AAAA,2CAgBc;AAAEE,YAAAA,SAAS,EAAE;AAAb,WAhBd;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,2CAmBY;AAAEC,YAAAA,KAAK,EAAE;AAAT,WAnBZ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAFqC,CAAnC;AA+BP,IAAMC,WAAW,GAACnB,WAAW,CAAC;AAC1BoB,EAAAA,IAAI,EAAC,MADqB;AAE1BjB,EAAAA,YAAY,EAAZA,YAF0B;AAG1BkB,EAAAA,QAAQ,EAAC,EAHiB;AAM1BC,EAAAA,aAAa,wDACRhB,UAAU,CAACiB,SADH,EACc,UAACC,KAAD,QAA6C;AAAA,4BAApCC,OAAoC;AAAA,QAA3BV,WAA2B,gBAA3BA,WAA2B;AAAA,QAAfW,IAAe,gBAAfA,IAAe;AAAA,QAAVR,KAAU,gBAAVA,KAAU;AAChEL,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;;AACA,QAAGN,KAAH,EAAS;AACLM,MAAAA,KAAK,CAACN,KAAN,GAAYA,KAAZ;AACAS,MAAAA,KAAK,CAACT,KAAD,CAAL;AACH,KAHD,MAGK;AACDM,MAAAA,KAAK,CAACI,QAAN,GAAeF,IAAf;AACDF,MAAAA,KAAK,CAACpB,WAAN,GAAkBW,WAAlB;AACAb,MAAAA,YAAY,CAAC2B,OAAb,CAAqB,OAArB,EAA6Bd,WAA7B;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBC,WAArB;AACF;;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAYU,KAAZ;AAKH,GAjBQ,mCAkBRlB,UAAU,CAACwB,OAlBH,EAkBY,UAACN,KAAD,EAAQO,MAAR,EAAiB;AAElCP,IAAAA,KAAK,CAACnB,OAAN,GAAc,IAAd;AAEH,GAtBQ;AANa,CAAD,CAA7B;AAgCA,eAAec,WAAW,CAACa,OAA3B","sourcesContent":["import {createSlice,createAsyncThunk} from \"@reduxjs/toolkit\"\r\n\r\nimport AsyncStorage from '@react-native-async-storage/async-storage'\r\nconst initialState={\r\n    accesstoken:null,\r\n    loading: false,\r\n}\r\nexport const signinUser = createAsyncThunk(\r\n    \"signinUser\",\r\n     async()=> {\r\n        try {\r\n          const result = await Google.logInAsync({\r\n            androidClientId: \"520350559970-q9dokdd76hcqmh6rb3ph1brhd2bj28ro.apps.googleusercontent.com\",\r\n            behavior: 'web',\r\n            scopes: ['profile', 'email'],\r\n          \r\n          });\r\n          console.log(\"return\",result.accessToken)\r\n      \r\n          if (result.type === 'success') {\r\n            return result.accessToken;\r\n           navigation.navigate(\"HomePage\")\r\n           \r\n          \r\n          } else {\r\n            return { cancelled: true };\r\n          }\r\n        } catch (e) {\r\n          return { error: true };\r\n        }\r\n       \r\n      }\r\n    \r\n     \r\n      \r\n    \r\n)\r\n\r\nconst authReducer=createSlice({\r\n    name:'user',\r\n    initialState,\r\n    reducers:{\r\n\r\n    },\r\n    extraReducers:{\r\n        [signinUser.fulfilled]:(state,{ payload:{accessToken,user,error}})=>{\r\n            console.log(state)\r\n            if(error){\r\n                state.error=error\r\n                alert(error)\r\n            }else{\r\n                state.userData=user\r\n               state.accesstoken=accessToken\r\n               AsyncStorage.setItem(\"token\",accessToken)\r\n               console.log(\"access\",accessToken)\r\n            }\r\n            console.log(state)\r\n\r\n         \r\n           \r\n            \r\n        },\r\n        [signinUser.pending]:(state, action)=>{\r\n          \r\n            state.loading=true\r\n\r\n        },\r\n    }\r\n\r\n})\r\nexport default authReducer.reducer"]},"metadata":{},"sourceType":"module"}