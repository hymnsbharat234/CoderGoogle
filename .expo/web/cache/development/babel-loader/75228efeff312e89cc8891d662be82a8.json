{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport StorageTask from \"./StorageTask\";\nvar UPLOAD_TASK = 'upload';\n\nvar StorageUploadTask = function (_StorageTask) {\n  _inherits(StorageUploadTask, _StorageTask);\n\n  var _super = _createSuper(StorageUploadTask);\n\n  function StorageUploadTask(storageRef, beginTaskFn) {\n    _classCallCheck(this, StorageUploadTask);\n\n    return _super.call(this, UPLOAD_TASK, storageRef, beginTaskFn);\n  }\n\n  return StorageUploadTask;\n}(StorageTask);\n\nexport { StorageUploadTask as default };","map":{"version":3,"sources":["C:/Users/ABC/Clump/coder/node_modules/@react-native-firebase/storage/lib/StorageUploadTask.js"],"names":["StorageTask","UPLOAD_TASK","StorageUploadTask","storageRef","beginTaskFn"],"mappings":";;;;;;;;;AAiBA,OAAOA,WAAP;AAEA,IAAMC,WAAW,GAAG,QAApB;;IAEqBC,iB;;;;;AACnB,6BAAYC,UAAZ,EAAwBC,WAAxB,EAAqC;AAAA;;AAAA,6BAC7BH,WAD6B,EAChBE,UADgB,EACJC,WADI;AAEpC;;;EAH4CJ,W;;SAA1BE,iB","sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport StorageTask from './StorageTask';\n\nconst UPLOAD_TASK = 'upload';\n\nexport default class StorageUploadTask extends StorageTask {\n  constructor(storageRef, beginTaskFn) {\n    super(UPLOAD_TASK, storageRef, beginTaskFn);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}