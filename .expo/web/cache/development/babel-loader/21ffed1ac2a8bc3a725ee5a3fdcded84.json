{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"progress\", \"insets\", \"layout\", \"modal\", \"onGoBack\", \"headerTitle\", \"headerLeft\", \"headerBackImage\", \"headerBackTitle\", \"headerBackTitleVisible\", \"headerTruncatedBackTitle\", \"headerBackAccessibilityLabel\", \"headerBackTestID\", \"headerBackAllowFontScaling\", \"headerBackTitleStyle\", \"headerTitleContainerStyle\", \"headerLeftContainerStyle\", \"headerRightContainerStyle\", \"headerBackgroundContainerStyle\", \"headerStyle\", \"headerStatusBarHeight\", \"styleInterpolator\"];\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getDefaultHeaderHeight, Header, HeaderBackButton, HeaderShownContext, HeaderTitle } from '@react-navigation/elements';\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport memoize from \"../../utils/memoize\";\nexport default function HeaderSegment(props) {\n  var isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  var _React$useState = React.useState(undefined),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      leftLabelLayout = _React$useState2[0],\n      setLeftLabelLayout = _React$useState2[1];\n\n  var _React$useState3 = React.useState(undefined),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      titleLayout = _React$useState4[0],\n      setTitleLayout = _React$useState4[1];\n\n  var handleTitleLayout = function handleTitleLayout(e) {\n    var _e$nativeEvent$layout = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout.height,\n        width = _e$nativeEvent$layout.width;\n    setTitleLayout(function (titleLayout) {\n      if (titleLayout && height === titleLayout.height && width === titleLayout.width) {\n        return titleLayout;\n      }\n\n      return {\n        height: height,\n        width: width\n      };\n    });\n  };\n\n  var handleLeftLabelLayout = function handleLeftLabelLayout(e) {\n    var _e$nativeEvent$layout2 = e.nativeEvent.layout,\n        height = _e$nativeEvent$layout2.height,\n        width = _e$nativeEvent$layout2.width;\n\n    if (leftLabelLayout && height === leftLabelLayout.height && width === leftLabelLayout.width) {\n      return;\n    }\n\n    setLeftLabelLayout({\n      height: height,\n      width: width\n    });\n  };\n\n  var getInterpolatedStyle = memoize(function (styleInterpolator, layout, current, next, titleLayout, leftLabelLayout, headerHeight) {\n    return styleInterpolator({\n      current: {\n        progress: current\n      },\n      next: next && {\n        progress: next\n      },\n      layouts: {\n        header: {\n          height: headerHeight,\n          width: layout.width\n        },\n        screen: layout,\n        title: titleLayout,\n        leftLabel: leftLabelLayout\n      }\n    });\n  });\n\n  var progress = props.progress,\n      insets = props.insets,\n      layout = props.layout,\n      modal = props.modal,\n      onGoBack = props.onGoBack,\n      title = props.headerTitle,\n      left = props.headerLeft,\n      headerBackImage = props.headerBackImage,\n      headerBackTitle = props.headerBackTitle,\n      headerBackTitleVisible = props.headerBackTitleVisible,\n      headerTruncatedBackTitle = props.headerTruncatedBackTitle,\n      headerBackAccessibilityLabel = props.headerBackAccessibilityLabel,\n      headerBackTestID = props.headerBackTestID,\n      headerBackAllowFontScaling = props.headerBackAllowFontScaling,\n      headerBackTitleStyle = props.headerBackTitleStyle,\n      headerTitleContainerStyle = props.headerTitleContainerStyle,\n      headerLeftContainerStyle = props.headerLeftContainerStyle,\n      headerRightContainerStyle = props.headerRightContainerStyle,\n      headerBackgroundContainerStyle = props.headerBackgroundContainerStyle,\n      customHeaderStyle = props.headerStyle,\n      _props$headerStatusBa = props.headerStatusBarHeight,\n      headerStatusBarHeight = _props$headerStatusBa === void 0 ? isParentHeaderShown ? 0 : insets.top : _props$headerStatusBa,\n      styleInterpolator = props.styleInterpolator,\n      rest = _objectWithoutProperties(props, _excluded);\n\n  var defaultHeight = getDefaultHeaderHeight(layout, modal, headerStatusBarHeight);\n\n  var _StyleSheet$flatten = StyleSheet.flatten(customHeaderStyle || {}),\n      _StyleSheet$flatten$h = _StyleSheet$flatten.height,\n      height = _StyleSheet$flatten$h === void 0 ? defaultHeight : _StyleSheet$flatten$h;\n\n  var _getInterpolatedStyle = getInterpolatedStyle(styleInterpolator, layout, progress.current, progress.next, titleLayout, headerBackTitle ? leftLabelLayout : undefined, typeof height === 'number' ? height : defaultHeight),\n      titleStyle = _getInterpolatedStyle.titleStyle,\n      leftButtonStyle = _getInterpolatedStyle.leftButtonStyle,\n      leftLabelStyle = _getInterpolatedStyle.leftLabelStyle,\n      rightButtonStyle = _getInterpolatedStyle.rightButtonStyle,\n      backgroundStyle = _getInterpolatedStyle.backgroundStyle;\n\n  var headerLeft = left ? left : onGoBack ? function (props) {\n    return React.createElement(HeaderBackButton, _extends({}, props, {\n      backImage: headerBackImage,\n      accessibilityLabel: headerBackAccessibilityLabel,\n      testID: headerBackTestID,\n      allowFontScaling: headerBackAllowFontScaling,\n      onPress: onGoBack,\n      labelVisible: headerBackTitleVisible,\n      label: headerBackTitle,\n      truncatedLabel: headerTruncatedBackTitle,\n      labelStyle: [leftLabelStyle, headerBackTitleStyle],\n      onLabelLayout: handleLeftLabelLayout,\n      screenLayout: layout,\n      titleLayout: titleLayout,\n      canGoBack: Boolean(onGoBack)\n    }));\n  } : undefined;\n  var headerTitle = typeof title !== 'function' ? function (props) {\n    return React.createElement(HeaderTitle, _extends({}, props, {\n      onLayout: handleTitleLayout\n    }));\n  } : title;\n  return React.createElement(Header, _extends({\n    modal: modal,\n    layout: layout,\n    headerTitle: headerTitle,\n    headerLeft: headerLeft,\n    headerTitleContainerStyle: [titleStyle, headerTitleContainerStyle],\n    headerLeftContainerStyle: [leftButtonStyle, headerLeftContainerStyle],\n    headerRightContainerStyle: [rightButtonStyle, headerRightContainerStyle],\n    headerBackgroundContainerStyle: [backgroundStyle, headerBackgroundContainerStyle],\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight: headerStatusBarHeight\n  }, rest));\n}","map":{"version":3,"sources":["HeaderSegment.tsx"],"names":["isParentHeaderShown","React","handleTitleLayout","e","width","setTitleLayout","titleLayout","height","handleLeftLabelLayout","leftLabelLayout","setLeftLabelLayout","getInterpolatedStyle","memoize","styleInterpolator","current","progress","next","layouts","header","layout","screen","title","leftLabel","headerTitle","headerLeft","headerStyle","headerStatusBarHeight","insets","rest","defaultHeight","getDefaultHeaderHeight","StyleSheet","customHeaderStyle","backgroundStyle","headerBackTitle","left","onGoBack","props","Boolean"],"mappings":"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","sourcesContent":["import {\n  getDefaultHeaderHeight,\n  Header,\n  HeaderBackButton,\n  HeaderShownContext,\n  HeaderTitle,\n} from '@react-navigation/elements';\nimport * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport type {\n  Layout,\n  SceneProgress,\n  StackHeaderOptions,\n  StackHeaderStyleInterpolator,\n} from '../../types';\nimport memoize from '../../utils/memoize';\n\ntype Props = StackHeaderOptions & {\n  layout: Layout;\n  title: string;\n  insets: EdgeInsets;\n  modal: boolean;\n  onGoBack?: () => void;\n  progress: SceneProgress;\n  styleInterpolator: StackHeaderStyleInterpolator;\n};\n\nexport default function HeaderSegment(props: Props) {\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n\n  const [leftLabelLayout, setLeftLabelLayout] =\n    React.useState<Layout | undefined>(undefined);\n\n  const [titleLayout, setTitleLayout] =\n    React.useState<Layout | undefined>(undefined);\n\n  const handleTitleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    setTitleLayout((titleLayout) => {\n      if (\n        titleLayout &&\n        height === titleLayout.height &&\n        width === titleLayout.width\n      ) {\n        return titleLayout;\n      }\n\n      return { height, width };\n    });\n  };\n\n  const handleLeftLabelLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    if (\n      leftLabelLayout &&\n      height === leftLabelLayout.height &&\n      width === leftLabelLayout.width\n    ) {\n      return;\n    }\n\n    setLeftLabelLayout({ height, width });\n  };\n\n  const getInterpolatedStyle = memoize(\n    (\n      styleInterpolator: StackHeaderStyleInterpolator,\n      layout: Layout,\n      current: Animated.AnimatedInterpolation,\n      next: Animated.AnimatedInterpolation | undefined,\n      titleLayout: Layout | undefined,\n      leftLabelLayout: Layout | undefined,\n      headerHeight: number\n    ) =>\n      styleInterpolator({\n        current: { progress: current },\n        next: next && { progress: next },\n        layouts: {\n          header: {\n            height: headerHeight,\n            width: layout.width,\n          },\n          screen: layout,\n          title: titleLayout,\n          leftLabel: leftLabelLayout,\n        },\n      })\n  );\n\n  const {\n    progress,\n    insets,\n    layout,\n    modal,\n    onGoBack,\n    headerTitle: title,\n    headerLeft: left,\n    headerBackImage,\n    headerBackTitle,\n    headerBackTitleVisible,\n    headerTruncatedBackTitle,\n    headerBackAccessibilityLabel,\n    headerBackTestID,\n    headerBackAllowFontScaling,\n    headerBackTitleStyle,\n    headerTitleContainerStyle,\n    headerLeftContainerStyle,\n    headerRightContainerStyle,\n    headerBackgroundContainerStyle,\n    headerStyle: customHeaderStyle,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    styleInterpolator,\n    ...rest\n  } = props;\n\n  const defaultHeight = getDefaultHeaderHeight(\n    layout,\n    modal,\n    headerStatusBarHeight\n  );\n\n  const { height = defaultHeight } = StyleSheet.flatten(\n    customHeaderStyle || {}\n  ) as ViewStyle;\n\n  const {\n    titleStyle,\n    leftButtonStyle,\n    leftLabelStyle,\n    rightButtonStyle,\n    backgroundStyle,\n  } = getInterpolatedStyle(\n    styleInterpolator,\n    layout,\n    progress.current,\n    progress.next,\n    titleLayout,\n    headerBackTitle ? leftLabelLayout : undefined,\n    typeof height === 'number' ? height : defaultHeight\n  );\n\n  const headerLeft: StackHeaderOptions['headerLeft'] = left\n    ? left\n    : onGoBack\n    ? (props) => (\n        <HeaderBackButton\n          {...props}\n          backImage={headerBackImage}\n          accessibilityLabel={headerBackAccessibilityLabel}\n          testID={headerBackTestID}\n          allowFontScaling={headerBackAllowFontScaling}\n          onPress={onGoBack}\n          labelVisible={headerBackTitleVisible}\n          label={headerBackTitle}\n          truncatedLabel={headerTruncatedBackTitle}\n          labelStyle={[leftLabelStyle, headerBackTitleStyle]}\n          onLabelLayout={handleLeftLabelLayout}\n          screenLayout={layout}\n          titleLayout={titleLayout}\n          canGoBack={Boolean(onGoBack)}\n        />\n      )\n    : undefined;\n\n  const headerTitle: StackHeaderOptions['headerTitle'] =\n    typeof title !== 'function'\n      ? (props) => <HeaderTitle {...props} onLayout={handleTitleLayout} />\n      : title;\n\n  return (\n    <Header\n      modal={modal}\n      layout={layout}\n      headerTitle={headerTitle}\n      headerLeft={headerLeft}\n      headerTitleContainerStyle={[titleStyle, headerTitleContainerStyle]}\n      headerLeftContainerStyle={[leftButtonStyle, headerLeftContainerStyle]}\n      headerRightContainerStyle={[rightButtonStyle, headerRightContainerStyle]}\n      headerBackgroundContainerStyle={[\n        backgroundStyle,\n        headerBackgroundContainerStyle,\n      ]}\n      headerStyle={customHeaderStyle}\n      headerStatusBarHeight={headerStatusBarHeight}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}