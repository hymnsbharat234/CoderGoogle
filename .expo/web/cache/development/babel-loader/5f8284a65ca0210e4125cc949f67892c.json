{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\ABC\\\\Clump\\\\coder\\\\src\\\\Components\\\\Auth\\\\index.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect } from \"react\";\nimport { auth, provider } from \"./firebase\";\nimport * as Google from 'expo-google-app-auth';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\n\nvar ProfilePage = function ProfilePage(_ref) {\n  var navigation = _ref.navigation;\n\n  var signInAsync = function signInAsync() {\n    var _await$Google$logInAs, type, user;\n\n    return _regeneratorRuntime.async(function signInAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(\" loggin in\");\n            _context.prev = 1;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Google.logInAsync({\n              androidClientId: \"520350559970-q9dokdd76hcqmh6rb3ph1brhd2bj28ro.apps.googleusercontent.com\"\n            }));\n\n          case 4:\n            _await$Google$logInAs = _context.sent;\n            type = _await$Google$logInAs.type;\n            user = _await$Google$logInAs.user;\n\n            if (type === \"success\") {\n              console.log(\" success, navigating to profile\");\n              navigation.navigate(\"HomePage\", {\n                user: user\n              });\n            }\n\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\" error with login\", _context.t0);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 10]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      backgroundColor: \"#e0e0e0\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }\n  }, React.createElement(Image, {\n    style: {\n      height: 90,\n      width: 130,\n      borderRadius: 5\n    },\n    source: require(\"../../../assets/google.jpg\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 14\n    }\n  }), React.createElement(Text, {\n    style: {\n      fontWeight: \"600\",\n      marginTop: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }, \"Please Login\"), React.createElement(View, {\n    style: {\n      marginTop: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return signInAsync();\n    },\n    style: {\n      width: 160,\n      backgroundColor: \"#fff\",\n      borderRadius: 5\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }\n  }, React.createElement(Text, {\n    style: {\n      textAlign: \"center\",\n      padding: 5,\n      fontWeight: \"600\",\n      color: \"#e64a19\"\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }\n  }, \"Google Sign In+\"))));\n};\n\nexport default ProfilePage;","map":{"version":3,"sources":["C:/Users/ABC/Clump/coder/src/Components/Auth/index.js"],"names":["React","useEffect","auth","provider","Google","ProfilePage","navigation","signInAsync","console","log","logInAsync","androidClientId","type","user","navigate","flex","justifyContent","alignItems","backgroundColor","height","width","borderRadius","require","fontWeight","marginTop","textAlign","padding","color"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAAQC,IAAR,EAAeC,QAAf;AACA,OAAO,KAAKC,MAAZ,MAAwB,sBAAxB;;;;;;;AAWC,IAAMC,WAAW,GAAE,SAAbA,WAAa,OAAgB;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAClC,MAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAClBC,YAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AADkB;AAAA;AAAA,6CAGaL,MAAM,CAACM,UAAP,CAAkB;AAE7CC,cAAAA,eAAe;AAF8B,aAAlB,CAHb;;AAAA;AAAA;AAGRC,YAAAA,IAHQ,yBAGRA,IAHQ;AAGFC,YAAAA,IAHE,yBAGFA,IAHE;;AAQhB,gBAAID,IAAI,KAAK,SAAb,EAAwB;AAEtBJ,cAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ;AACAH,cAAAA,UAAU,CAACQ,QAAX,CAAoB,UAApB,EAAgC;AAAED,gBAAAA,IAAI,EAAJA;AAAF,eAAhC;AACD;;AAZe;AAAA;;AAAA;AAAA;AAAA;AAchBL,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAdgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAwBG,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACM,MAAAA,IAAI,EAAC,CAAN;AAAQC,MAAAA,cAAc,EAAC,QAAvB;AAAgCC,MAAAA,UAAU,EAAC,QAA3C;AAAoDC,MAAAA,eAAe,EAAC;AAApE,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAC,EAAR;AAAWC,MAAAA,KAAK,EAAC,GAAjB;AAAqBC,MAAAA,YAAY,EAAC;AAAlC,KADP;AAEA,IAAA,MAAM,EAAEC,OAAO,8BAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,UAAU,EAAC,KAAZ;AAAkBC,MAAAA,SAAS,EAAC;AAA5B,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,EAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,SAAS,EAAC;AAAX,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AACD,IAAA,OAAO,EAAE;AAAA,aAAIjB,WAAW,EAAf;AAAA,KADR;AAEA,IAAA,KAAK,EAAE;AAACa,MAAAA,KAAK,EAAC,GAAP;AAAWF,MAAAA,eAAe,EAAC,MAA3B;AAAkCG,MAAAA,YAAY,EAAC;AAA/C,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,SAAS,EAAC,QAAX;AAAoBC,MAAAA,OAAO,EAAC,CAA5B;AAA8BH,MAAAA,UAAU,EAAC,KAAzC;AAA+CI,MAAAA,KAAK,EAAC;AAArD,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,CADJ,CANJ,CADJ;AAgBH,CAzCD;;AA0CA,eAAetB,WAAf","sourcesContent":["import React,{useEffect} from \"react\"\r\nimport {auth , provider}  from './firebase'\r\nimport * as Google from 'expo-google-app-auth'\r\nimport { View,Text,StyleSheet,TouchableOpacity,Image } from \"react-native\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n const ProfilePage =({navigation})=>{\r\n  const signInAsync = async () => {\r\n    console.log(\" loggin in\");\r\n    try {\r\n      const { type, user } = await Google.logInAsync({\r\n    \r\n        androidClientId: `520350559970-q9dokdd76hcqmh6rb3ph1brhd2bj28ro.apps.googleusercontent.com`,\r\n      });\r\n\r\n      if (type === \"success\") {\r\n        // Then you can use the Google REST API\r\n        console.log(\" success, navigating to profile\");\r\n        navigation.navigate(\"HomePage\", { user });\r\n      }\r\n    } catch (error) {\r\n      console.log(\" error with login\", error);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n\r\n   \r\n     return(\r\n         <View style={{flex:1,justifyContent:\"center\",alignItems:\"center\",backgroundColor:\"#e0e0e0\"}}>\r\n             <Image\r\n             style={{height:90,width:130,borderRadius:5}}\r\n             source={require(\"../../../assets/google.jpg\")}\r\n             />\r\n             <Text style={{fontWeight:\"600\",marginTop:5}}>Please Login</Text>\r\n             <View style={{marginTop:10}}>\r\n                 <TouchableOpacity \r\n                onPress={()=>signInAsync()}\r\n                 style={{width:160,backgroundColor:\"#fff\",borderRadius:5}}>\r\n                     <Text style={{textAlign:\"center\",padding:5,fontWeight:\"600\",color:\"#e64a19\"}}>Google Sign In+</Text>\r\n                 </TouchableOpacity>\r\n             </View>\r\n         </View>\r\n     )\r\n }\r\n export default ProfilePage"]},"metadata":{},"sourceType":"module"}